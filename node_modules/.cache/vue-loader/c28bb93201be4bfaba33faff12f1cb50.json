{"remainingRequest":"/Users/moussia/Desktop/esgi/2em année/projetVMAnew/projet-VMA/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/moussia/Desktop/esgi/2em année/projetVMAnew/projet-VMA/src/views/ForgetPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/moussia/Desktop/esgi/2em année/projetVMAnew/projet-VMA/src/views/ForgetPassword.vue","mtime":1637090595787},{"path":"/Users/moussia/Desktop/esgi/2em année/projetVMAnew/projet-VMA/node_modules/cache-loader/dist/cjs.js","mtime":1632390574608},{"path":"/Users/moussia/Desktop/esgi/2em année/projetVMAnew/projet-VMA/node_modules/babel-loader/lib/index.js","mtime":1635281407189},{"path":"/Users/moussia/Desktop/esgi/2em année/projetVMAnew/projet-VMA/node_modules/cache-loader/dist/cjs.js","mtime":1632390574608},{"path":"/Users/moussia/Desktop/esgi/2em année/projetVMAnew/projet-VMA/node_modules/vue-loader/lib/index.js","mtime":1632390580238}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHZhbGlkYXRpb25NaXhpbiB9IGZyb20gJ3Z1ZWxpZGF0ZSc7CmltcG9ydCB7IHJlcXVpcmVkLCBlbWFpbCB9IGZyb20gJ3Z1ZWxpZGF0ZS9saWIvdmFsaWRhdG9ycyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0ZvcmdldFBhc3N3b3JkJywKICBtaXhpbnM6IFt2YWxpZGF0aW9uTWl4aW5dLAogIGRhdGE6ICgpID0+ICh7CiAgICBmb3JtOiB7CiAgICAgIGVtYWlsOiBudWxsLAogICAgfSwKICAgIHVzZXJTYXZlZDogZmFsc2UsCiAgICBzZW5kaW5nOiBmYWxzZSwKICAgIGxhc3RVc2VyOiBudWxsLAogIH0pLAogIHZhbGlkYXRpb25zOiB7CiAgICBmb3JtOiB7CiAgICAgIGVtYWlsOiB7CiAgICAgICAgcmVxdWlyZWQsCiAgICAgICAgZW1haWwsCiAgICAgIH0sCiAgICB9LAogIH0sCiAgbWV0aG9kczogewogICAgZ2V0VmFsaWRhdGlvbkNsYXNzKGZpZWxkTmFtZSkgewogICAgICBjb25zdCBmaWVsZCA9IHRoaXMuJHYuZm9ybVtmaWVsZE5hbWVdOwogICAgICBpZiAoZmllbGQpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgJ21kLWludmFsaWQnOiBmaWVsZC4kaW52YWxpZCAmJiBmaWVsZC4kZGlydHksCiAgICAgICAgfTsKICAgICAgfQogICAgfSwKICAgIGNsZWFyRm9ybSgpIHsKICAgICAgdGhpcy4kdi4kcmVzZXQoKTsKICAgICAgdGhpcy5mb3JtLmVtYWlsID0gbnVsbDsKICAgIH0sCiAgICBzYXZlVXNlcigpIHsKICAgICAgdGhpcy5zZW5kaW5nID0gdHJ1ZTsKICAgIH0sCiAgICB2YWxpZGF0ZVVzZXIoKSB7CiAgICAgIHRoaXMuJHYuJHRvdWNoKCk7CgogICAgICBpZiAoIXRoaXMuJHYuJGludmFsaWQpIHsKICAgICAgICB0aGlzLnNhdmVVc2VyKCk7CiAgICAgIH0KICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["ForgetPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"ForgetPassword.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <form\n      novalidate\n      class=\"toto md-layout-item md-size-50\"\n      @submit.prevent=\"validateUser\"\n    >\n      <md-card>\n        <md-card-header>\n          <div class=\"md-title\">Forget Password</div>\n        </md-card-header>\n\n        <md-card-content>\n          <md-field :class=\"getValidationClass('email')\">\n            <label for=\"email\">Email</label>\n            <md-input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              autocomplete=\"email\"\n              v-model=\"form.email\"\n              :disabled=\"sending\"\n            />\n            <span class=\"md-error\" v-if=\"!$v.form.email.required\"\n              >The email is required</span\n            >\n            <span class=\"md-error\" v-else-if=\"!$v.form.email.email\"\n              >Invalid email</span\n            >\n          </md-field>\n        </md-card-content>\n\n        <md-card-actions>\n          <md-button\n            type=\"submit\"\n            class=\"md-raised md-primary\"\n            :disabled=\"sending\"\n            >Forget Password</md-button\n          >\n        </md-card-actions>\n        <router-link to=\"/login\">Login</router-link>\n      </md-card>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { validationMixin } from 'vuelidate';\nimport { required, email } from 'vuelidate/lib/validators';\n\nexport default {\n  name: 'ForgetPassword',\n  mixins: [validationMixin],\n  data: () => ({\n    form: {\n      email: null,\n    },\n    userSaved: false,\n    sending: false,\n    lastUser: null,\n  }),\n  validations: {\n    form: {\n      email: {\n        required,\n        email,\n      },\n    },\n  },\n  methods: {\n    getValidationClass(fieldName) {\n      const field = this.$v.form[fieldName];\n      if (field) {\n        return {\n          'md-invalid': field.$invalid && field.$dirty,\n        };\n      }\n    },\n    clearForm() {\n      this.$v.$reset();\n      this.form.email = null;\n    },\n    saveUser() {\n      this.sending = true;\n    },\n    validateUser() {\n      this.$v.$touch();\n\n      if (!this.$v.$invalid) {\n        this.saveUser();\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.toto {\n  display: inline-block;\n}\n</style>\n"]}]}